{
	"compiler": {
		"version": "0.8.16+commit.07a7930e"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "assertId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "requester",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "bytes",
						"name": "claim",
						"type": "bytes"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "timestamp",
						"type": "uint256"
					}
				],
				"name": "assertTruth",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "assertId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "timestamp",
						"type": "uint256"
					}
				],
				"name": "settleRequest",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "bytes",
						"name": "claim",
						"type": "bytes"
					}
				],
				"name": "assertTruthWithDefaults",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "assertId",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "assertionRequests",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "assertionId",
						"type": "bytes32"
					},
					{
						"internalType": "bytes",
						"name": "assertedClaim",
						"type": "bytes"
					},
					{
						"internalType": "address",
						"name": "requester",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "result",
						"type": "bool"
					},
					{
						"internalType": "enum OptimisticOracleV3.Status",
						"name": "currentStatus",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "assertId",
						"type": "uint256"
					}
				],
				"name": "getAssertion",
				"outputs": [
					{
						"components": [
							{
								"internalType": "bytes32",
								"name": "assertionId",
								"type": "bytes32"
							},
							{
								"internalType": "bytes",
								"name": "assertedClaim",
								"type": "bytes"
							},
							{
								"internalType": "address",
								"name": "requester",
								"type": "address"
							},
							{
								"internalType": "bool",
								"name": "result",
								"type": "bool"
							},
							{
								"internalType": "enum OptimisticOracleV3.Status",
								"name": "currentStatus",
								"type": "uint8"
							}
						],
						"internalType": "struct OptimisticOracleV3.AssertionRequest",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "assertId",
						"type": "uint256"
					}
				],
				"name": "getAssertionResult",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "assertId",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "assertResult",
						"type": "bool"
					}
				],
				"name": "setAssertResult",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "assertId",
						"type": "uint256"
					},
					{
						"internalType": "bytes32",
						"name": "assertionId",
						"type": "bytes32"
					}
				],
				"name": "setAssertionId",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "assertId",
						"type": "uint256"
					}
				],
				"name": "settleAssertion",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalAssertions",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"notice": "Add the conditions based on the status Getter Requests",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"client-oracle/OptimisticOracleV3.sol": "OptimisticOracleV3"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"client-oracle/OptimisticOracleV3.sol": {
			"keccak256": "0xc52d4effdbec68849b7c316fdb2082dd62c9934bbbda4fbae9567a6480ea1366",
			"license": "AGPL-3.0-only",
			"urls": [
				"bzz-raw://28fb1f1d471c4e87479761306c1d64b6ce79143ed9bdb246024bbcbc9624131f",
				"dweb:/ipfs/QmVUAJw4Mupp7ydJxUpmJVzsbDqLznkbEUStobrnLo2k68"
			]
		}
	},
	"version": 1
}